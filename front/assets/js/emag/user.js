/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!


goog.provide('proto.gws.UserProtobuf');
goog.provide('proto.gws.UserProtobuf.Sex');
goog.provide('proto.gws.method.user.get.RequestProtobuf');
goog.provide('proto.gws.method.user.get.ResponseProtobuf');
goog.provide('proto.gws.method.user.login.RequestProtobuf');
goog.provide('proto.gws.method.user.login.ResponseProtobuf');
goog.provide('proto.gws.method.user.logout.RequestProtobuf');
goog.provide('proto.gws.method.user.logout.ResponseProtobuf');

goog.require('jspb.Message');
goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gws.method.user.login.RequestProtobuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gws.method.user.login.RequestProtobuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gws.method.user.login.RequestProtobuf.displayName = 'proto.gws.method.user.login.RequestProtobuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gws.method.user.login.RequestProtobuf.prototype.toObject = function(opt_includeInstance) {
  return proto.gws.method.user.login.RequestProtobuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gws.method.user.login.RequestProtobuf} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gws.method.user.login.RequestProtobuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gws.method.user.login.RequestProtobuf}
 */
proto.gws.method.user.login.RequestProtobuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gws.method.user.login.RequestProtobuf;
  return proto.gws.method.user.login.RequestProtobuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gws.method.user.login.RequestProtobuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gws.method.user.login.RequestProtobuf}
 */
proto.gws.method.user.login.RequestProtobuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gws.method.user.login.RequestProtobuf} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.login.RequestProtobuf.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gws.method.user.login.RequestProtobuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.login.RequestProtobuf.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.gws.method.user.login.RequestProtobuf.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gws.method.user.login.RequestProtobuf.prototype.setCode = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gws.method.user.login.ResponseProtobuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gws.method.user.login.ResponseProtobuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gws.method.user.login.ResponseProtobuf.displayName = 'proto.gws.method.user.login.ResponseProtobuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gws.method.user.login.ResponseProtobuf.prototype.toObject = function(opt_includeInstance) {
  return proto.gws.method.user.login.ResponseProtobuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gws.method.user.login.ResponseProtobuf} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gws.method.user.login.ResponseProtobuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gws.method.user.login.ResponseProtobuf}
 */
proto.gws.method.user.login.ResponseProtobuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gws.method.user.login.ResponseProtobuf;
  return proto.gws.method.user.login.ResponseProtobuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gws.method.user.login.ResponseProtobuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gws.method.user.login.ResponseProtobuf}
 */
proto.gws.method.user.login.ResponseProtobuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gws.method.user.login.ResponseProtobuf} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.login.ResponseProtobuf.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gws.method.user.login.ResponseProtobuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.login.ResponseProtobuf.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.gws.method.user.login.ResponseProtobuf.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gws.method.user.login.ResponseProtobuf.prototype.setToken = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gws.method.user.logout.RequestProtobuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gws.method.user.logout.RequestProtobuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gws.method.user.logout.RequestProtobuf.displayName = 'proto.gws.method.user.logout.RequestProtobuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gws.method.user.logout.RequestProtobuf.prototype.toObject = function(opt_includeInstance) {
  return proto.gws.method.user.logout.RequestProtobuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gws.method.user.logout.RequestProtobuf} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gws.method.user.logout.RequestProtobuf.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gws.method.user.logout.RequestProtobuf}
 */
proto.gws.method.user.logout.RequestProtobuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gws.method.user.logout.RequestProtobuf;
  return proto.gws.method.user.logout.RequestProtobuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gws.method.user.logout.RequestProtobuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gws.method.user.logout.RequestProtobuf}
 */
proto.gws.method.user.logout.RequestProtobuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gws.method.user.logout.RequestProtobuf} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.logout.RequestProtobuf.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gws.method.user.logout.RequestProtobuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.logout.RequestProtobuf.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gws.method.user.logout.ResponseProtobuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gws.method.user.logout.ResponseProtobuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gws.method.user.logout.ResponseProtobuf.displayName = 'proto.gws.method.user.logout.ResponseProtobuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gws.method.user.logout.ResponseProtobuf.prototype.toObject = function(opt_includeInstance) {
  return proto.gws.method.user.logout.ResponseProtobuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gws.method.user.logout.ResponseProtobuf} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gws.method.user.logout.ResponseProtobuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    reason: msg.getReason_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gws.method.user.logout.ResponseProtobuf}
 */
proto.gws.method.user.logout.ResponseProtobuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gws.method.user.logout.ResponseProtobuf;
  return proto.gws.method.user.logout.ResponseProtobuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gws.method.user.logout.ResponseProtobuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gws.method.user.logout.ResponseProtobuf}
 */
proto.gws.method.user.logout.ResponseProtobuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gws.method.user.logout.ResponseProtobuf} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.logout.ResponseProtobuf.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gws.method.user.logout.ResponseProtobuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.logout.ResponseProtobuf.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getReason_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes reason = 1;
 * @return {!(string|Uint8Array)}
 */
proto.gws.method.user.logout.ResponseProtobuf.prototype.getReason = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes reason = 1;
 * This is a type-conversion wrapper around `getReason()`
 * @return {string}
 */
proto.gws.method.user.logout.ResponseProtobuf.prototype.getReason_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReason()));
};


/**
 * optional bytes reason = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReason()`
 * @return {!Uint8Array}
 */
proto.gws.method.user.logout.ResponseProtobuf.prototype.getReason_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReason()));
};


/** @param {!(string|Uint8Array)} value */
proto.gws.method.user.logout.ResponseProtobuf.prototype.setReason = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gws.UserProtobuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gws.UserProtobuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gws.UserProtobuf.displayName = 'proto.gws.UserProtobuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gws.UserProtobuf.prototype.toObject = function(opt_includeInstance) {
  return proto.gws.UserProtobuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gws.UserProtobuf} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gws.UserProtobuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userPass: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    mobile: jspb.Message.getFieldWithDefault(msg, 5, ""),
    qq: jspb.Message.getFieldWithDefault(msg, 6, ""),
    weixin: jspb.Message.getFieldWithDefault(msg, 7, ""),
    email: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, 0),
    deviceCode: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gws.UserProtobuf}
 */
proto.gws.UserProtobuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gws.UserProtobuf;
  return proto.gws.UserProtobuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gws.UserProtobuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gws.UserProtobuf}
 */
proto.gws.UserProtobuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserPass(value);
      break;
    case 4:
      var value = /** @type {!proto.gws.UserProtobuf.Sex} */ (reader.readEnum());
      msg.setSex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setQq(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeixin(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gws.UserProtobuf} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.UserProtobuf.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gws.UserProtobuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.UserProtobuf.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getUserPass();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getSex();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = this.getMobile();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getQq();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = this.getWeixin();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = this.getEmail();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = this.getStatus();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = this.getDeviceCode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setUserName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string user_pass = 3;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getUserPass = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setUserPass = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional Sex sex = 4;
 * @return {!proto.gws.UserProtobuf.Sex}
 */
proto.gws.UserProtobuf.prototype.getSex = function() {
  return /** @type {!proto.gws.UserProtobuf.Sex} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.gws.UserProtobuf.Sex} value */
proto.gws.UserProtobuf.prototype.setSex = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string mobile = 5;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setMobile = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional string qq = 6;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getQq = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setQq = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string weixin = 7;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getWeixin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setWeixin = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional string email = 8;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setEmail = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional uint32 status = 9;
 * @return {number}
 */
proto.gws.UserProtobuf.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.gws.UserProtobuf.prototype.setStatus = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional string device_code = 10;
 * @return {string}
 */
proto.gws.UserProtobuf.prototype.getDeviceCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.gws.UserProtobuf.prototype.setDeviceCode = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * @enum {number}
 */
proto.gws.UserProtobuf.Sex = {
  FEMALE: 0,
  MALE: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gws.method.user.get.RequestProtobuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gws.method.user.get.RequestProtobuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gws.method.user.get.RequestProtobuf.displayName = 'proto.gws.method.user.get.RequestProtobuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gws.method.user.get.RequestProtobuf.prototype.toObject = function(opt_includeInstance) {
  return proto.gws.method.user.get.RequestProtobuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gws.method.user.get.RequestProtobuf} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gws.method.user.get.RequestProtobuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gws.method.user.get.RequestProtobuf}
 */
proto.gws.method.user.get.RequestProtobuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gws.method.user.get.RequestProtobuf;
  return proto.gws.method.user.get.RequestProtobuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gws.method.user.get.RequestProtobuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gws.method.user.get.RequestProtobuf}
 */
proto.gws.method.user.get.RequestProtobuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gws.method.user.get.RequestProtobuf} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.get.RequestProtobuf.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gws.method.user.get.RequestProtobuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.get.RequestProtobuf.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.gws.method.user.get.RequestProtobuf.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.gws.method.user.get.RequestProtobuf.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.gws.method.user.get.ResponseProtobuf = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.gws.method.user.get.ResponseProtobuf, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.gws.method.user.get.ResponseProtobuf.displayName = 'proto.gws.method.user.get.ResponseProtobuf';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.gws.method.user.get.ResponseProtobuf.prototype.toObject = function(opt_includeInstance) {
  return proto.gws.method.user.get.ResponseProtobuf.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.gws.method.user.get.ResponseProtobuf} msg The msg instance to transform.
 * @return {!Object}
 */
proto.gws.method.user.get.ResponseProtobuf.toObject = function(includeInstance, msg) {
  var f, obj = {
    user: (f = msg.getUser()) && proto.gws.UserProtobuf.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.gws.method.user.get.ResponseProtobuf}
 */
proto.gws.method.user.get.ResponseProtobuf.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.gws.method.user.get.ResponseProtobuf;
  return proto.gws.method.user.get.ResponseProtobuf.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.gws.method.user.get.ResponseProtobuf} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.gws.method.user.get.ResponseProtobuf}
 */
proto.gws.method.user.get.ResponseProtobuf.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.gws.UserProtobuf;
      reader.readMessage(value,proto.gws.UserProtobuf.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.gws.method.user.get.ResponseProtobuf} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.get.ResponseProtobuf.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.gws.method.user.get.ResponseProtobuf.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.gws.method.user.get.ResponseProtobuf.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getUser();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.gws.UserProtobuf.serializeBinaryToWriter
    );
  }
};


/**
 * optional gws.UserProtobuf user = 1;
 * @return {?proto.gws.UserProtobuf}
 */
proto.gws.method.user.get.ResponseProtobuf.prototype.getUser = function() {
  return /** @type{?proto.gws.UserProtobuf} */ (
    jspb.Message.getWrapperField(this, proto.gws.UserProtobuf, 1));
};


/** @param {?proto.gws.UserProtobuf|undefined} value */
proto.gws.method.user.get.ResponseProtobuf.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.gws.method.user.get.ResponseProtobuf.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.gws.method.user.get.ResponseProtobuf.prototype.hasUser = function() {
  return jspb.Message.getField(this, 1) != null;
};


